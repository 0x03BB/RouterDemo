<Project ToolsVersion="Current" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<UsingTask
	  TaskName="ReadLinesFromFileWithFilter"
	  TaskFactory="RoslynCodeTaskFactory"
	  AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
		<ParameterGroup>
			<File ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
			<ExcludeRegex ParameterType="System.String" />
			<Lines ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System"/>
			<Using Namespace="System.IO"/>
			<Using Namespace="System.Text.RegularExpressions"/>
			<Code Type="Fragment" Language="cs">
				<![CDATA[
				List<TaskItem> tasks = new List<TaskItem>();
				for (int i = 0; i < File.Length; i++)
				{
					string path = File[i].GetMetadata("FullPath");
					string[] fileLines = System.IO.File.ReadAllLines(path);
					for (int j = 0; j < fileLines.Length; j++)
					{
						if (ShouldOutputLine(fileLines[j]))
						{
							tasks.Add(new TaskItem(fileLines[j]));
						}
					}
				}
				Lines = tasks.ToArray();
				
				bool ShouldOutputLine(string line)
				{
					// Don't output if the line is empty.
					// If ExcludeRegex is not provided, skip the regex.
					// Othewise, don't output if the regex matches.
					return !string.IsNullOrEmpty(line) &&
						(string.IsNullOrEmpty(ExcludeRegex) ||
						!System.Text.RegularExpressions.Regex.IsMatch(line, ExcludeRegex));
				}
				]]>
			</Code>
		</Task>
	</UsingTask>
</Project>
